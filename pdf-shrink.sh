#! /bin/bash
#
# shrink a PDF using ghostscript
#
# REQUIREMENTS
# - ghostscript (`gs`)
#
# USAGE
#
#    pdf-shrink.sh <settings>[:<dpi>] <input> [<output>]
#
# <output> is optional, settings will be appended to filename
#
# <settings> can be ghostscript's PDFSETTINGS options:
#     screen   - lower quality, smaller size. (72 dpi)
#     ebook    - for better quality, but slightly larger pdfs. (150 dpi)
#     prepress - output similar to Acrobat Distiller "Prepress Optimized" setting (300 dpi)
#     printer  - selects output similar to the Acrobat Distiller "Print Optimized" setting (300 dpi)
#     default  - selects output intended to be useful across a wide variety of uses, possibly at the expense of a larger output file
#
# <dpi> is optional, e.g. 150 for 150 dpi
#
# EXAMPLE
#     pdf-shrink.sh ebook input.pdf
#     pdf-shrink.sh default:100 input.pdf
#
# NOTE
#
# opening a PDF with libreoffice (draw) and exporting as PDF produces also quite good results
# TODO add this as option and pass libreoffice command via CLI (if possible)
#
# REFERENCE
#
# https://askubuntu.com/a/256449/592751
#
# Use the following Ghostscript command:
# 
# gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
# -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf input.pdf
# 
# Summary of -dPDFSETTINGS:
# 
#     -dPDFSETTINGS=/screen lower quality, smaller size. (72 dpi)
#     -dPDFSETTINGS=/ebook for better quality, but slightly larger pdfs. (150 dpi)
#     -dPDFSETTINGS=/prepress output similar to Acrobat Distiller "Prepress Optimized" setting (300 dpi)
#     -dPDFSETTINGS=/printer selects output similar to the Acrobat Distiller "Print Optimized" setting (300 dpi)
#     -dPDFSETTINGS=/default selects output intended to be useful across a wide variety of uses, possibly at the expense of a larger output file
#
# Generated by
# https://www.phind.com/agent?cache=clrm4lge30002if08n9kj36gr

# Check if the correct number of arguments were provided
if [ "$#" -ne 2 ]; then
    echo "Usage: pdf-shrink.sh <settings>[:<dpi>] <input> [<output>]"
    exit 1
fi

# Assign arguments to variables
settings=$1
input=$2

# Split settings into pdfsetting and dpi
IFS=":" read -ra parts <<< "$settings"
pdfsetting="/${parts[0]}"
dpi=${parts[1]}

# Generate output filename if not provided
base=$(basename "$input")
name="${base%.*}"
ext="${base##*.}"
output="${name}-${settings//:/-}.${ext}"

# Prepare basic ghostscript options
options="-sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dNOPAUSE -dQUIET -dBATCH"

# Add dpi option if specified
if [ ! -z "$dpi" ]; then
    options+=" -r$dpi"
fi

# Call ghostscript with prepared options
set -x
gs $options -dPDFSETTINGS="$pdfsetting" -sOutputFile="$output" "$input"
